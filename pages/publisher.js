import Head from 'next/head'
import Navbar from '@components/Navbar';
import Code from '@components/Code';
import { publisherArea } from '@helpers/enums';

const linkClassName = "text-sky-500 hover:text-sky-600 transition-all text-sm font-medium block mb-1"

export default function Avatar() {

  return (
    <>
      <Head>
        <title>Publisher Data</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="dark:bg-neutral-900 min-h-screen pb-8">

        <Navbar />

        <div className="max-w-5xl px-4 mx-auto pt-4 ">
          <h1 className="dark:text-white text-2xl font-semibold">Publisher Data</h1>

          <div className="my-8 dark:text-white">
            <a href={`${process.env.API_URL}/api/publishers`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers
            </a>
            <a href={`${process.env.API_URL}/api/publishers?name=balai`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?name=balai
            </a>
            <a href={`${process.env.API_URL}/api/publishers?name=Balai%20Pustaka`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?name=Balai%20Pustaka
            </a>
            <a href={`${process.env.API_URL}/api/publishers?area=6`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?area=6
            </a>
            <a href={`${process.env.API_URL}/api/publishers?area=3&area=6`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?area=3&area=6
            </a>
            <a href={`${process.env.API_URL}/api/publishers?registered_year_start=2018`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?registered_year_start=2018
            </a>
            <a href={`${process.env.API_URL}/api/publishers?registered_year_end=1980`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?registered_year_end=1980
            </a>
            <a href={`${process.env.API_URL}/api/publishers?registered_year_start=2017&registered_year_end=2018`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?registered_year_start=2017&registered_year_end=2018
            </a>
            <a href={`${process.env.API_URL}/api/publishers?count_only=true`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?count_only=true
            </a>
            <a href={`${process.env.API_URL}/api/publishers?name=balai&count_only=true`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?name=balai&count_only=true
            </a>
            <a href={`${process.env.API_URL}/api/publishers?area=7&registered_year_end=1995`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?area=7&registered_year_end=1995
            </a>
            <a href={`${process.env.API_URL}/api/publishers?name=bintang&registered_year_start=2010&registered_year_end=2020`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?name=bintang&registered_year_start=2010&registered_year_end=2020
            </a>
            <a href={`${process.env.API_URL}/api/publishers?area=5&area=6&count_only=true`} className={linkClassName} target="_blank" rel="noreferrer">
              {process.env.API_URL}/api/publishers?area=5&area=6&count_only=true
            </a>
            <p className="font-medium dark:text-white text-sm mt-3 mb-1">Kode Area :</p>
            <ul className="text-sm dark:text-white">
              {publisherArea.map(area =>
                <li key={area.id}>{area.id} - {area.area}</li>
              )}
            </ul>  
          </div>

          <Code name={`Response From /api/publishers`} code={`[
  {
    "penerbit": "Boebon Jaya",
    "no_anggota": "001/DIA/96",
    "wilayah": "DI Aceh",
    "tahun_masuk": 1996,
    "anggota_luar_biasa": 0
  },
  {
    "penerbit": "Citra Karya",
    "no_anggota": "002/DIA/92",
    "wilayah": "DI Aceh",
    "tahun_masuk": 1992,
    "anggota_luar_biasa": 0
  },
]`} />

          <Code name={`Response From /api/publishers?name=balai`} code={`[
  {
    "penerbit": "Balai Aksara",
    "no_anggota": "012/DKI/82",
    "wilayah": "DKI Jakarta",
    "tahun_masuk": 1982,
    "anggota_luar_biasa": 0
  },
  {
    "penerbit": "Balai Pustaka",
    "no_anggota": "013/DKI/79",
    "wilayah": "DKI Jakarta",
    "tahun_masuk": 1979,
    "anggota_luar_biasa": 0
  },
]`} />

          <Code name="pages/api/publishers" code={`import { publishers } from "@data/publishers";
import { publisherArea } from '@helpers/enums';

export default function handler(req, res) {
  let result = publishers;

  if (req.query['name']) {
    result = result.filter((publisher) => {
      return publisher.penerbit.toLowerCase().includes(req.query['name'].toLowerCase());
    });
  }

  if (req.query['area']) {
    let selectedArea = [];
    let selectedPublishers = [];
    publisherArea.map((target) => {
      if (req.query['area'].includes(target.id)) {
        selectedArea.push(target.area);
      }
    })
    result.map((publisher) => {
      if (selectedArea.includes(publisher.wilayah)) {
        selectedPublishers.push(publisher);
      }
    })
    result = selectedPublishers;
  }

  if (req.query['registered_year_start']) {
    result = result.filter((publisher) => {
      return parseInt(publisher.tahun_masuk) >= req.query['registered_year_start']
    });
  }

  if (req.query['registered_year_end']) {
    result = result.filter((publisher) => {
      return parseInt(publisher.tahun_masuk) <= req.query['registered_year_end']
    });
  }

  if (req.query['count_only']) {
    res.status(200).json({ count: result.length });
    return;
  }

  if (result.length == 0) return res.status(200).json({ message: 'Not Found' })
  res.status(200).send(JSON.stringify(result, null, 2));
  // res.status(200).json(result);
  return;
}`} />

        </div>
      </main >
    </>
  )
}
